{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovie","useState","setQuery","isLoading","setLoading","setMovie","hasError","setError","normilizedData","movieOnQuery","createMovie","Title","Plot","Poster","imdbID","searchMovie","search","a","data","onSubmit","event","preventDefault","htmlFor","type","id","value","placeholder","onChange","target","disabled","trim","classNames","onClick","App","setMovies","prev","some","prevMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e15e6efe.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=';\nconst myKey = '5443d3fd';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}${myKey}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [hasError, setError] = useState(false);\n\n  const normilizedData = (movieOnQuery: MovieData) => {\n    const createMovie = {\n      title: movieOnQuery.Title,\n      description: movieOnQuery.Plot,\n      imgUrl: movieOnQuery.Poster === 'N/A'\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n        : movieOnQuery.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movieOnQuery.imdbID}`,\n      imdbId: movieOnQuery.imdbID,\n    };\n\n    setMovie(createMovie);\n  };\n\n  const searchMovie = async (search: string) => {\n    try {\n      setLoading(true);\n      const data = await getMovie(search);\n\n      if ('Error' in data) {\n        setError(true);\n      } else {\n        normilizedData(data);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    searchMovie(query);\n  };\n\n  const handleAddMovie = (selectedMovie: Movie) => {\n    addMovie(selectedMovie);\n    setMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              value={query}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              onChange={({ target }) => {\n                setQuery(target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!query.trim()}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light',\n                { 'is-loading': isLoading })}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddMovie(movie)}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovies = (movie: Movie) => {\n    setMovies(prev => {\n      if (prev.some(prevMovie => prevMovie.imdbId === movie.imdbId)) {\n        return prev;\n      }\n\n      return [...prev, movie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}